<?xml version="1.0" encoding="utf-8"?>

<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Sport.Pages.ExercisePage"
             xmlns:vm="clr-namespace:ClientUtilsProject.ViewModels;assembly=ClientUtilsProject"
             xmlns:dxe="clr-namespace:DevExpress.Maui.Editors;assembly=DevExpress.Maui.Editors"
             xmlns:sfe="clr-namespace:Syncfusion.Maui.Inputs;assembly=Syncfusion.Maui.Inputs"
             xmlns:SharedUtils="clr-namespace:ClientUtilsProject.Utils;assembly=ClientUtilsProject"
             xmlns:dataClasses="clr-namespace:ClientUtilsProject.DataClasses;assembly=ClientUtilsProject"
             xmlns:core="http://schemas.syncfusion.com/maui"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:DataType="vm:ExerciseVM"
             Title="ExercisePage"
             x:Name="Page">

    <ContentPage.Resources>
        <toolkit:IsNotNullConverter x:Key="IsNotNullConverter" />
        <SharedUtils:MyIsEqualConverter x:Key="MyIsEqualConverter" />
    </ContentPage.Resources>

    <Grid RowDefinitions="auto, auto, auto, auto, *, auto" ColumnDefinitions="auto, auto, *, auto, auto"
          Margin="10,5,10,0" RowSpacing="5">

        <Border Stroke="gray" StrokeShape="RoundRectangle 5"
                BackgroundColor="Transparent" Grid.ColumnSpan="5">
            <VerticalStackLayout>
                <Label Text="Exercice existant" FontAttributes="Bold"
                       VerticalOptions="Center" />

                <Picker ItemsSource="{Binding Exercises}"
                        VerticalOptions="Center" Margin="15,0,15,0"
                        x:Name="ExerciseDropdown" AutomationId="ExerciseDropdown"
                        SelectedItem="{Binding SelectedExercise}"
                        >
                    
                </Picker>
                
                <!-- <dxe:ComboBoxEdit ItemsSource="{Binding Exercises}" -->
                <!--                   VerticalOptions="Center" Margin="15,0,15,0" -->
                <!--                   x:Name="ExerciseDropdown" AutomationId="ExerciseDropdown" -->
                <!--                   SelectedItem="{Binding SelectedExercise}" -->
                <!--                   BoxMode="Outlined"> -->
                <!--     <dxe:ComboBoxEdit.ItemTemplate> -->
                <!--         <DataTemplate x:DataType="dataClasses:Exercise"> -->
                <!--             <Grid ColumnDefinitions="auto, *, auto" -->
                <!--                   Padding="10,0,10,0"> -->
                <!--                 <Label Text="{Binding ExerciseName}" VerticalOptions="Center" -->
                <!--                        VerticalTextAlignment="Center" -->
                <!--                        TextColor="Black" AutomationId="DropdownItem" /> -->
                <!--                 <Label Text="{Binding ExerciseDifficulties.Count}" VerticalOptions="Center" -->
                <!--                        VerticalTextAlignment="Center" -->
                <!--                        Grid.Column="2" TextColor="Black" /> -->
                <!--             </Grid> -->
                <!--         </DataTemplate> -->
                <!--     </dxe:ComboBoxEdit.ItemTemplate> -->
                <!-- </dxe:ComboBoxEdit> -->
                
                <FlexLayout x:Name="DifficultiesLayout"
                            BindableLayout.ItemsSource="{Binding CurrentExercise.ExerciseDifficulties}"
                            HorizontalOptions="FillAndExpand" Wrap="Wrap"
                            VerticalOptions="StartAndExpand"
                            Margin="15,-10,0,0">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate x:DataType="dataClasses:ExerciceDifficulty">
                            <Grid Margin="0,0,0,5" FlexLayout.Order="{Binding DifficultyLevel}">
                                <dxe:Chip Text="{Binding ShowMeShort}" IsIconVisible="True"
                                          AutomationId="selectedDifficulty"
                                          BackgroundColor="Gold"
                                          TapCommand="{Binding Source={RelativeSource AncestorType={x:Type vm:ExerciseVM}}, Path= ExistingDifficultyTappedCommand}"
                                          TapCommandParameter="{Binding Id}"
                                          TextColor="Black"
                                          Margin="0,0,5,0">

                                    <dxe:Chip.BorderColor>
                                        <MultiBinding Converter="{x:StaticResource MyIsEqualConverter}">
                                            <Binding Source="{x:Reference Page}"
                                                     Path="BindingContext.CurrentDifficulty.DifficultyLevel" />
                                            <Binding Path="DifficultyLevel" />
                                        </MultiBinding>
                                    </dxe:Chip.BorderColor>

                                    <dxe:Chip.BorderThickness>
                                        <MultiBinding Converter="{x:StaticResource MyIsEqualConverter}">
                                            <Binding Source="{x:Reference Page}"
                                                     Path="BindingContext.CurrentDifficulty.DifficultyLevel" />
                                            <Binding Path="DifficultyLevel" />
                                        </MultiBinding>
                                    </dxe:Chip.BorderThickness>

                                    <dxe:Chip.Icon>
                                        <FontImageSource
                                            Color="Brown"
                                            FontFamily="FontelloGauge"
                                            Glyph="{x:StaticResource IconGauge}"
                                            Size="20" />
                                    </dxe:Chip.Icon>
                                </dxe:Chip>
                            </Grid>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </FlexLayout>

                <Entry Text="{Binding ExistingExerciseName}" Margin="15,0,15,0"
                       AutomationId="existingExerciseName" TextColor="Black"
                       IsEnabled="{Binding SelectedExercise, Converter={x:StaticResource IsNotNullConverter}}" />
            </VerticalStackLayout>
        </Border>

        <Entry Text="{Binding NewExerciseName}"
               TextColor="Black" AutomationId="newExerciseName"
               Grid.Row="1" Margin="15,0,15,0"
               Grid.ColumnSpan="5">
            <Entry.Triggers>
                <DataTrigger Binding="{Binding ExistingExerciseNameInError}"
                             Value="True" TargetType="Entry">
                    <DataTrigger.Setters>
                        <Setter Property="TextColor" Value="Red" />
                    </DataTrigger.Setters>
                </DataTrigger>
            </Entry.Triggers>
        </Entry>

        <!-- <Entry Text="{Binding CurrentExercise.ExerciseName}" AutomationId="ExerciseName" -->
        <!--        Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="4" -->
        <!--        VerticalOptions="Center" Margin="13,0,0,0"/> -->

        <Label Text="DifficultÃ©" FontAttributes="Bold" Grid.Row="2" />
        <Slider x:Name="slider" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                Maximum="150" Value="{Binding CurrentDifficulty.DifficultyLevel}"
                VerticalOptions="Center" />
        <Label x:Name="displayLabel" Grid.Row="2" Grid.Column="3" AutomationId="ExerciseDifficulty"
               Text="{Binding Source={x:Reference slider},Path=Value,
                              StringFormat='{0:F0}'}"
               Margin="0,0,5,0"
               HorizontalOptions="Center" VerticalOptions="Center" />
        <Label Grid.Row="2" Grid.Column="4" Text="{Binding CurrentDifficulty.ShowName}" />
        <Entry Grid.Row="3" Grid.Column="1" Text="{Binding CurrentDifficulty.DifficultyLevel}" Keyboard="Numeric"
               AutomationId="ExerciseValue" x:Name="DifficultyLevelEntry" Focused="DifficultyLevelEntry_Focused" />
        <Button Grid.Row="3" Grid.Column="3" Text="Cacher"
                Clicked="HideKeyboard_Clicked" AutomationId="HideKeyboardBtn" />

        <!-- Boutons du bas de la page -->
        <Grid ColumnDefinitions="*, auto, auto"
              Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="4">

            <Button Text="Back" Command="{Binding BackCommand}" AutomationId="BackBtn" />
            <Button Grid.Row="5" Grid.Column="3" AutomationId="SaveExerciseBtn"
                    Text="Enregistrer" Command="{Binding SaveCommand}" />

        </Grid>
    </Grid>
</ContentPage>