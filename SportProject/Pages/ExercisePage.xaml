<?xml version="1.0" encoding="utf-8"?>

<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Sport.Pages.ExercisePage"
             xmlns:vm="clr-namespace:ClientUtilsProject.ViewModels;assembly=ClientUtilsProject"
             xmlns:dxe="clr-namespace:DevExpress.Maui.Editors;assembly=DevExpress.Maui.Editors"
             xmlns:sfe="clr-namespace:Syncfusion.Maui.Inputs;assembly=Syncfusion.Maui.Inputs"
             xmlns:SharedUtils="clr-namespace:ClientUtilsProject.Utils;assembly=ClientUtilsProject"
             xmlns:dataClasses="clr-namespace:ClientUtilsProject.DataClasses;assembly=ClientUtilsProject"
             xmlns:core="http://schemas.syncfusion.com/maui"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:dx="http://schemas.devexpress.com/maui"
             x:DataType="vm:ExerciseVM"
             Title="ExercisePage"
             x:Name="Page">

    <ContentPage.Resources>
        <toolkit:IsNotNullConverter x:Key="IsNotNullConverter" />
        <SharedUtils:MyIsEqualConverter x:Key="MyIsEqualConverter" />
        <SharedUtils:MyIsIntEqualConverter x:Key="MyIsIntEqualConverter" />
        <SharedUtils:MyIsNotNullConverter x:Key="MyIsNotNullConverter" />
        <SharedUtils:MyIsIntNotEqualConverter x:Key="MyIsIntNotEqualConverter" />
        <SharedUtils:AllTrueMultiConverter x:Key="AllTrueMultiConverter" />
        <toolkit:IsEqualConverter x:Key="IsEqualConverter" />
        <toolkit:IsNotEqualConverter x:Key="IsNotEqualConverter" />
    </ContentPage.Resources>

    <Grid RowDefinitions="auto, auto, auto, auto, *, auto" ColumnDefinitions="auto, auto, *, auto, auto"
          Margin="10,5,10,0" RowSpacing="5">

        <dx:DXBorder Grid.Row="0" Grid.RowSpan="1" Grid.ColumnSpan="4"
                     BackgroundColor="#F7F7F7"
                     BorderColor="#F1F1F1" BorderThickness="1"
                     CornerRadius="10"
                     WidthRequest="{Binding Source={x:Reference Page}, Path=Width}">
            <Grid
                RowDefinitions="auto, auto, auto, auto, auto"
                ColumnDefinitions="auto, auto, auto, auto, *"
                Padding="5,0,5,0"
                Margin="0,0,0,10">

                <Label Text="Définir un exercice" FontAttributes="Bold"
                       VerticalOptions="Center" Margin="0,10,0,0"
                       Grid.Row="0" Grid.ColumnSpan="5" FontSize="18"
                       HorizontalOptions="Center" />

                <dx:ChoiceChipGroup Margin="0,-15,0,0"
                                    SelectedItem="{Binding SelectedExercise}"
                                    ItemsSource="{Binding Exercises}" AutomationId="ExercisesGroup"
                                    DisplayMember="DisplayedName"
                                    IsMultiline="True" AllowDeselect="True"
                                    Grid.Row="1" Grid.ColumnSpan="5"
                                    x:Name="ExercisesChipGroup" ChipTapCommand="{Binding ExerciseTappedCommand}"
                                    ChipTapCommandParameter="{Binding SelectedExercise}"
                                    ChipDisabledBackgroundColor="Bisque"/>

                <FlexLayout Grid.Row="2" Grid.ColumnSpan="5"
                                       x:Name="TextsLayout" Margin="0,-15,0,0"
                                       AlignContent="SpaceAround">
                    <FlexLayout.IsVisible>
                        <MultiBinding Converter="{StaticResource AllTrueMultiConverter}">
                            <Binding Source="{x:Reference ExercisesChipGroup}" Path="SelectedItem" Converter="{StaticResource MyIsNotNullConverter}"/>
                            <Binding Source="{x:Reference ExercisesChipGroup}" Path="SelectedIndex" Converter="{StaticResource MyIsIntNotEqualConverter}" ConverterParameter="-1"/>
                        </MultiBinding>
                    </FlexLayout.IsVisible>

                    <Label Text="Nom: " VerticalOptions="Center" />
                    <Entry Text="{Binding NewExerciseName}"
                           x:Name="NewExerciseNameEntry"
                           Placeholder="Nouvel exercice" FlexLayout.Grow="2" 
                           TextColor="Black" AutomationId="newExerciseName">

                        <Entry.IsVisible>
                            <MultiBinding Converter="{StaticResource AllTrueMultiConverter}">
                                <Binding Source="{x:Reference TextsLayout}" Path="IsVisible"/>
                                <Binding Source="{x:Reference ExercisesChipGroup}" Path="SelectedIndex" Converter="{StaticResource MyIsIntEqualConverter}" ConverterParameter="0"/>
                            </MultiBinding>
                        </Entry.IsVisible>
                    </Entry>

                    <Entry Text="{Binding ExistingExerciseName}"
                           x:Name="ExistingExerciseNameEntry"
                           AutomationId="existingExerciseName" TextColor="Black"
                           Placeholder="Exercice existant" FlexLayout.Grow="2"
                           IsEnabled="{Binding CurrentExercise, Converter={x:StaticResource IsNotNullConverter}}">
                        <Entry.IsVisible>
                            <MultiBinding Converter="{StaticResource AllTrueMultiConverter}">
                                <Binding Source="{x:Reference TextsLayout}" Path="IsVisible"/>
                                <Binding Source="{x:Reference ExercisesChipGroup}" Path="SelectedIndex" Converter="{StaticResource MyIsIntNotEqualConverter}" ConverterParameter="0"/>
                                <Binding Source="{x:Reference ExercisesChipGroup}" Path="SelectedIndex" Converter="{StaticResource MyIsIntNotEqualConverter}" ConverterParameter="-1"/>
                            </MultiBinding>
                        </Entry.IsVisible>
                    </Entry>

                    <dx:Chip HeightRequest="30" VerticalOptions="Center"
                             Margin="10,0,10,0">
                        <dx:Chip.Triggers>
                            <DataTrigger TargetType="dx:Chip"
                                         Binding="{Binding Source={x:Reference NewExerciseNameEntry},Path=IsVisible}"
                                         Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="Text"
                                            Value="Ajouter"/>
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger TargetType="dx:Chip"
                                         Binding="{Binding Source={x:Reference ExistingExerciseNameEntry},Path=IsVisible}"
                                         Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="Text"
                                            Value="Modifier"/>
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </dx:Chip.Triggers>
                    </dx:Chip>
                </FlexLayout>
                
                <Label Text="Définir une difficulté" FontAttributes="Bold"
                       VerticalOptions="Center" Margin="0,10,0,0"
                       Grid.Row="3" Grid.ColumnSpan="5" FontSize="18"
                       HorizontalOptions="Center"
                       IsVisible="{Binding CurrentExercise, Converter={StaticResource IsNotNullConverter}}" />

                <dx:ChoiceChipGroup SelectedItem="{Binding SelectedDifficulty}" AutomationId="DifficultiesGroup"
                                    ItemsSource="{Binding CurrentExercise.ExerciseDifficulties}"
                                    DisplayMember="DisplayedName" IsMultiline="True" Margin="0,-12,0,0"
                                    Grid.Row="4" Grid.ColumnSpan="5" AllowDeselect="True"
                                    IsVisible="{Binding CurrentExercise, Converter={StaticResource IsNotNullConverter}}" />
                
            </Grid>
        </dx:DXBorder>

        <!-- <Entry Text="{Binding CurrentExercise.ExerciseName}" AutomationId="ExerciseName" -->
        <!--        Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="4" -->
        <!--        VerticalOptions="Center" Margin="13,0,0,0"/> -->

        <dx:DXBorder Grid.ColumnSpan="5" Grid.Row="1"
                     BackgroundColor="#F7F7F7"
                     BorderColor="#F1F1F1" BorderThickness="1"
                     CornerRadius="10"
                     WidthRequest="{Binding Source={x:Reference Page}, Path=Width}">
            <VerticalStackLayout>
                <Label Text="Difficulté" FontAttributes="Bold"
                       VerticalOptions="Center" Margin="0,10,0,0"
                       Grid.Row="0" Grid.ColumnSpan="5" FontSize="18"
                       HorizontalOptions="Center" />

                <Slider x:Name="slider" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                        Maximum="150" Value="{Binding CurrentDifficulty.DifficultyLevel}"
                        VerticalOptions="Center" />
                <Label x:Name="displayLabel" Grid.Row="2" Grid.Column="3" AutomationId="ExerciseDifficulty"
                       Text="{Binding Source={x:Reference slider},Path=Value,
                              StringFormat='{0:F0}'}"
                       Margin="0,0,5,0"
                       HorizontalOptions="Center" VerticalOptions="Center" />
                <Label Grid.Row="2" Grid.Column="4" Text="{Binding CurrentDifficulty.ShowName}" />
                <Entry Grid.Row="3" Grid.Column="1" Text="{Binding CurrentDifficulty.DifficultyLevel}"
                       Keyboard="Numeric"
                       AutomationId="ExerciseValue" x:Name="DifficultyLevelEntry"
                       Focused="DifficultyLevelEntry_Focused" />


            </VerticalStackLayout>
        </dx:DXBorder>

        <VerticalStackLayout Grid.Row="2" Grid.ColumnSpan="5">
            <Button Grid.Row="3" Grid.Column="3" Text="Cacher"
                    Clicked="HideKeyboard_Clicked" AutomationId="HideKeyboardBtn"
                    HorizontalOptions="End" />
        </VerticalStackLayout>

        <!-- Boutons du bas de la page -->
        <Grid ColumnDefinitions="*, auto, auto"
              Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="4">

            <Button Text="Back" Command="{Binding BackCommand}" AutomationId="BackBtn" />
            <Button Grid.Row="5" Grid.Column="3" AutomationId="SaveExerciseBtn"
                    Text="Enregistrer" Command="{Binding SaveCommand}" />

        </Grid>
    </Grid>
</ContentPage>