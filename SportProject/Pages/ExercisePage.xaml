<?xml version="1.0" encoding="utf-8"?>

<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="SportProject.Pages.ExercisePage"
             xmlns:vm="clr-namespace:ClientUtilsProject.ViewModels;assembly=ClientUtilsProject"
             xmlns:dxe="clr-namespace:DevExpress.Maui.Editors;assembly=DevExpress.Maui.Editors"
             xmlns:sfe="clr-namespace:Syncfusion.Maui.Inputs;assembly=Syncfusion.Maui.Inputs"
             xmlns:SharedUtils="clr-namespace:ClientUtilsProject.Utils;assembly=ClientUtilsProject"
             xmlns:dataClasses="clr-namespace:ClientUtilsProject.DataClasses;assembly=ClientUtilsProject"
             xmlns:core="http://schemas.syncfusion.com/maui"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:dx="http://schemas.devexpress.com/maui"
             x:DataType="vm:ExerciseVM"
             BackgroundColor="{DynamicResource SixtyColor}"
             Title="ExercisePage"
             x:Name="Page">

    <ContentPage.Behaviors>
        <toolkit:StatusBarBehavior StatusBarColor="{AppThemeBinding Light={StaticResource SixtyColor}, Dark={StaticResource SixtyColor}}" 
                                   StatusBarStyle="{AppThemeBinding Light=DarkContent, Dark=LightContent}" />
    </ContentPage.Behaviors>
    
    <ContentPage.Resources>
        <toolkit:IsNotNullConverter x:Key="IsNotNullConverter" />
        <SharedUtils:MyIsEqualConverter x:Key="MyIsEqualConverter" />
        <SharedUtils:MyIsIntEqualConverter x:Key="MyIsIntEqualConverter" />
        <SharedUtils:MyIsNotNullConverter x:Key="MyIsNotNullConverter" />
        <SharedUtils:MyIsIntNotEqualConverter x:Key="MyIsIntNotEqualConverter" />
        <SharedUtils:AllTrueMultiConverter x:Key="AllTrueMultiConverter" />
        <SharedUtils:FirstNotEmptyConverter x:Key="FirstNotEmptyConverter" />
        <SharedUtils:IsNotNullAndHasNameConverter x:Key="IsNotNullAndHasNameConverter" />
        <toolkit:IsEqualConverter x:Key="IsEqualConverter" />
        <toolkit:IsNotEqualConverter x:Key="IsNotEqualConverter" />
    </ContentPage.Resources>

    <Grid RowDefinitions="auto, auto, auto, auto, *, auto" ColumnDefinitions="auto, auto, *, auto, auto"
          Margin="10,5,10,0" RowSpacing="5" Padding="0">

        <VerticalStackLayout Grid.Row="0" Grid.RowSpan="1" Grid.ColumnSpan="5"
                             Margin="0,0,0,0">
            <!-- WidthRequest="{Binding Source={x:Reference Page}, Path=Width}"> -->
            <dx:DXBorder
                BackgroundColor="#F7F7F7"
                BorderColor="#D5D5D5" BorderThickness="1"
                CornerRadius="10">
                <Grid
                    RowDefinitions="auto, auto, auto"
                    ColumnDefinitions="auto, auto, auto, auto, *"
                    Padding="5,0,5,0"
                    Margin="0,0,0,10">

                    <Label Text="Choisir un exercice" FontAttributes="Bold"
                           VerticalOptions="Center" Margin="0,10,0,0"
                           Grid.Row="0" Grid.ColumnSpan="5" FontSize="18"
                           HorizontalOptions="Center" />
                    
                    <dx:ChoiceChipGroup Margin="5,-15,0,0" Padding="0,20,0,0"
                                        SelectedItem="{Binding SelectedExercise}"
                                        ItemsSource="{Binding Exercises}" AutomationId="ExercisesGroup"
                                        IsMultiline="True" AllowDeselect="True"
                                        Grid.Row="1" Grid.ColumnSpan="5"
                                        x:Name="ExercisesChipGroup" ChipTapCommand="{Binding ExerciseTappedCommand}"
                                        ChipTapCommandParameter="{Binding SelectedExercise}"
                                        ChipDisabledBackgroundColor="Bisque">
                        <dx:ChoiceChipGroup.ChipContentTemplate>
                            <DataTemplate x:DataType="dataClasses:Exercise">
                                <Label Text="{Binding DisplayedName}"
                                       FontAttributes="Bold" />
                            </DataTemplate>
                        </dx:ChoiceChipGroup.ChipContentTemplate>
                    </dx:ChoiceChipGroup>

                    <FlexLayout Grid.Row="2" Grid.ColumnSpan="5" Padding="0"
                                x:Name="TextsLayout" Margin="5,0,0,0"
                                AlignContent="Start">
                        <FlexLayout.IsVisible>
                            <MultiBinding Converter="{StaticResource AllTrueMultiConverter}">
                                <Binding Source="{x:Reference ExercisesChipGroup}" Path="SelectedItem"
                                         Converter="{StaticResource MyIsNotNullConverter}" />
                                <Binding Source="{x:Reference ExercisesChipGroup}" Path="SelectedIndex"
                                         Converter="{StaticResource MyIsIntNotEqualConverter}" ConverterParameter="-1" />
                            </MultiBinding>
                        </FlexLayout.IsVisible>

                        <Label Text="Nom: " VerticalOptions="Center" Margin="0" />
                        <Entry Text="{Binding NewExerciseName}"
                               x:Name="NewExerciseNameEntry"
                               Placeholder="Nouvel exercice" FlexLayout.Grow="2"
                               TextColor="Black" AutomationId="newExerciseName">

                            <Entry.IsVisible>
                                <MultiBinding Converter="{StaticResource AllTrueMultiConverter}">
                                    <Binding Source="{x:Reference TextsLayout}" Path="IsVisible" />
                                    <Binding Source="{x:Reference ExercisesChipGroup}" Path="SelectedIndex"
                                             Converter="{StaticResource MyIsIntEqualConverter}" ConverterParameter="0" />
                                </MultiBinding>
                            </Entry.IsVisible>
                        </Entry>

                        <Entry Text="{Binding ExistingExerciseName}"
                               x:Name="ExistingExerciseNameEntry"
                               AutomationId="existingExerciseName" TextColor="Black"
                               Placeholder="Exercice existant" FlexLayout.Grow="2"
                               IsEnabled="{Binding SelectedExercise, Converter={x:StaticResource IsNotNullConverter}}">
                            <Entry.IsVisible>
                                <MultiBinding Converter="{StaticResource AllTrueMultiConverter}">
                                    <Binding Source="{x:Reference TextsLayout}" Path="IsVisible" />
                                    <Binding Source="{x:Reference ExercisesChipGroup}" Path="SelectedIndex"
                                             Converter="{StaticResource MyIsIntNotEqualConverter}"
                                             ConverterParameter="0" />
                                    <Binding Source="{x:Reference ExercisesChipGroup}" Path="SelectedIndex"
                                             Converter="{StaticResource MyIsIntNotEqualConverter}"
                                             ConverterParameter="-1" />
                                </MultiBinding>
                            </Entry.IsVisible>
                        </Entry>

                        <dx:Chip HeightRequest="30" VerticalOptions="Center"
                                 Margin="10,0,10,0"
                                 TapCommand="{Binding SetNameCommand}">

                            <dx:Chip.TapCommandParameter>
                                <MultiBinding Converter="{StaticResource FirstNotEmptyConverter}">
                                    <Binding Source="{x:Reference NewExerciseNameEntry}" Path="Text" />
                                    <Binding Source="{x:Reference ExistingExerciseNameEntry}" Path="Text" />
                                </MultiBinding>
                            </dx:Chip.TapCommandParameter>

                            <dx:Chip.Triggers>
                                <DataTrigger TargetType="dx:Chip"
                                             Binding="{Binding Source={x:Reference NewExerciseNameEntry},Path=IsVisible}"
                                             Value="True">
                                    <DataTrigger.Setters>
                                        <Setter Property="Text"
                                                Value="Ajouter" />
                                    </DataTrigger.Setters>
                                </DataTrigger>
                                <DataTrigger TargetType="dx:Chip"
                                             Binding="{Binding Source={x:Reference ExistingExerciseNameEntry},Path=IsVisible}"
                                             Value="True">
                                    <DataTrigger.Setters>
                                        <Setter Property="Text"
                                                Value="Modifier" />
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </dx:Chip.Triggers>
                        </dx:Chip>
                    </FlexLayout>
                </Grid>
            </dx:DXBorder>

            <dx:DXBorder BackgroundColor="#F7F7F7" Margin="0,5,0,10"
                         BorderColor="#D5D5D5" BorderThickness="1"
                         CornerRadius="10">
                <dx:DXBorder.IsVisible>
                    <MultiBinding Converter="{StaticResource IsNotNullAndHasNameConverter}">
                        <Binding Path="SelectedExercise"/>
                        <Binding Path="SelectedExercise.ExerciseName"/>
                    </MultiBinding>
                </dx:DXBorder.IsVisible>
                    
                <Grid
                    RowDefinitions="auto, auto, auto"
                    ColumnDefinitions="auto, auto, auto, auto, *"
                    Padding="5,0,5,0">

                    <Label Text="Définir une difficulté" FontAttributes="Bold"
                           VerticalOptions="Center" Margin="0,10,0,0"
                           Grid.Row="0" Grid.ColumnSpan="5" FontSize="18"
                           HorizontalOptions="Center">
                        <Label.IsVisible>
                            <MultiBinding Converter="{StaticResource IsNotNullAndHasNameConverter}">
                                <Binding Path="SelectedExercise"/>
                                <Binding Path="SelectedExercise.ExerciseName"/>
                            </MultiBinding>
                        </Label.IsVisible>
                    </Label>

                    <dx:ChoiceChipGroup SelectedItem="{Binding SelectedDifficulty}" AutomationId="DifficultiesGroup"
                                        ItemsSource="{Binding SelectedExercise.ExerciseDifficulties}"
                                        IsMultiline="True" Margin="5,-12,0,0" x:Name="DifficultiesChipGroup"
                                        Grid.Row="1" Grid.ColumnSpan="5" AllowDeselect="True"
                                        Padding="0,20,0,0" ChildAdded="Element_OnChildAdded"
                                        ChipTapCommand="{Binding  DifficultyTappedCommand}">
                        <dx:ChoiceChipGroup.IsVisible>
                            <MultiBinding Converter="{StaticResource IsNotNullAndHasNameConverter}">
                                <Binding Path="SelectedExercise"/>
                                <Binding Path="SelectedExercise.ExerciseName"/>
                            </MultiBinding>
                        </dx:ChoiceChipGroup.IsVisible>
                        
                        <dx:ChoiceChipGroup.ChipContentTemplate>
                            <DataTemplate x:DataType="dataClasses:ExerciceDifficulty">
                                <Label Text="{Binding DisplayedName}"
                                       FontAttributes="Bold" />
                            </DataTemplate>
                        </dx:ChoiceChipGroup.ChipContentTemplate>
                    </dx:ChoiceChipGroup>

                    <VerticalStackLayout Grid.Row="2" Grid.ColumnSpan="5" Margin="0,15,0,0">

                        <FlexLayout AlignContent="Start" Margin="5,0,0,5">
                            <FlexLayout.IsVisible>
                                <MultiBinding Converter="{StaticResource IsNotNullAndHasNameConverter}" ConverterParameter="2">
                                    <Binding Path="SelectedExercise"/>
                                    <Binding Path="SelectedDifficulty"/>
                                    <Binding Path="SelectedExercise.ExerciseName"/>
                                </MultiBinding>
                            </FlexLayout.IsVisible>
                            
                            <dx:NumericEdit Value="{Binding SelectedDifficulty.DifficultyLevel}"
                                            AutomationId="ExerciseValue" x:Name="DifficultyLevelEntry"
                                            Suffix="{Binding SelectedDifficulty.ShowName}"
                                            BoxPadding="0,3,0,0" WidthRequest="120" HeightRequest="30"
                                            AffixColor="Grey" CornerRadius="7" MaxValue="200"
                                            IsUpDownIconVisible="True" UpDownIconAlignment="Both"
                                            MaxDecimalDigitCount="0" AllowNullValue="True"
                                            IconIndent="3" TextHorizontalAlignment="Center"/>

                            <Slider x:Name="slider" FlexLayout.Grow="1"
                                    Maximum="200" Value="{Binding SelectedDifficulty.DifficultyLevel}"
                                    VerticalOptions="Center" />
                        </FlexLayout>
                        <!-- <Label x:Name="displayLabel"  AutomationId="ExerciseDifficulty" -->
                        <!--        Text="{Binding Source={x:Reference slider},Path=Value, -->
                        <!--             StringFormat='{0:F0}'}" -->
                        <!--        Margin="0,0,5,0" -->
                        <!--        HorizontalOptions="Center" VerticalOptions="Center" /> -->

                    </VerticalStackLayout>
                </Grid>
            </dx:DXBorder>
        </VerticalStackLayout>


        <!-- <Entry Text="{Binding CurrentExercise.ExerciseName}" AutomationId="ExerciseName" -->
        <!--        Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="4" -->
        <!--        VerticalOptions="Center" Margin="13,0,0,0"/> -->

        <!-- <dx:DXBorder Grid.ColumnSpan="5" Grid.Row="1" -->
        <!--              BackgroundColor="#F7F7F7" -->
        <!--              BorderColor="#F1F1F1" BorderThickness="1" -->
        <!--              CornerRadius="10" -->
        <!--              WidthRequest="{Binding Source={x:Reference Page}, Path=Width}"> -->
        <!--     <VerticalStackLayout> -->
        <!--         <Label Text="Difficulté" FontAttributes="Bold" -->
        <!--                VerticalOptions="Center" Margin="0,10,0,0" -->
        <!--                Grid.Row="0" Grid.ColumnSpan="5" FontSize="18" -->
        <!--                HorizontalOptions="Center" /> -->
        <!-- -->
        <!-- <Slider x:Name="slider" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" -->
        <!--         Maximum="150" Value="{Binding CurrentDifficulty.DifficultyLevel}" -->
        <!--         VerticalOptions="Center" /> -->
        <!-- <Label x:Name="displayLabel" Grid.Row="2" Grid.Column="3" AutomationId="ExerciseDifficulty" -->
        <!--        Text="{Binding Source={x:Reference slider},Path=Value, -->
        <!--               StringFormat='{0:F0}'}" -->
        <!--        Margin="0,0,5,0" -->
        <!--        HorizontalOptions="Center" VerticalOptions="Center" /> -->
        <!-- <Label Grid.Row="2" Grid.Column="4" Text="{Binding CurrentDifficulty.ShowName}" /> -->
        <!-- <Entry Grid.Row="3" Grid.Column="1" Text="{Binding CurrentDifficulty.DifficultyLevel}" -->
        <!--        Keyboard="Numeric" -->
        <!--        AutomationId="ExerciseValue" x:Name="DifficultyLevelEntry" -->
        <!--        Focused="DifficultyLevelEntry_Focused" /> -->
        <!-- -->
        <!-- -->
        <!--     </VerticalStackLayout> -->
        <!-- </dx:DXBorder> -->

        <VerticalStackLayout Grid.Row="2" Grid.ColumnSpan="5">
            <Button Grid.Row="3" Grid.Column="3" Text="Cacher"
                    Clicked="HideKeyboard_Clicked" AutomationId="HideKeyboardBtn"
                    HorizontalOptions="End" />
        </VerticalStackLayout>

        <!-- Boutons du bas de la page -->
        <Grid ColumnDefinitions="*, auto, auto"
              Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="4">

            <Button Text="Back" Command="{Binding BackCommand}" AutomationId="BackBtn" />
            <Button Grid.Row="5" Grid.Column="3" AutomationId="SaveExerciseBtn"
                    Text="Enregistrer" Command="{Binding SaveCommand}" />

        </Grid>
    </Grid>
</ContentPage>